change-history of Beam:
		$Id$

*******************************************************************************
[Beam test-03-01-27]:
*******************************************************************************
< 2003-01-27: commit >

CLVColumn, CLVEasyItem:
	-	removed support for string-truncation that is not used by Beam
		but that used to eat a considerable amount of memory when 
		browsing large mail-folders

BmPrefsGeneralView:
	-	removed default-refview-layout and useStripedListView, since
		they did not really make sense

BmMailRef, BmMailRefList:
	-	removed dummy-items that used to be needed for the 
		default-layout view provided in prefs (which is now gone)
	-	changed constructors to take 'const BmString&'-parameters 
		instead of BmString, avoiding the copying overhead

BmBodyPartList, BmBodyPartView, BmDataModel, BmMailFolder, 
BmMailFolderView, BmMailRefView, BmPrefsRecvMailView, 
BmPrefsSendMailView, BmPrefsSignatureView:
	-	changed constructors to take 'const BmString&'-parameters 
		instead of BmString, avoiding the copying overhead

BmListController:
	-	optimised memory-footprint by providing the item-contents
		through GetUserText() instead of statically copying them
		into the list-view
	-	changed constructors to take 'const BmString&'-parameters 
		instead of BmString, avoiding the copying overhead

BmMail:
	-	changed iter++ to ++iter, just to be consistent (and because
		pre-increment is better for objects than post-increment)

BmMainWindow:
	-	fiddled with default-sizes

libSieve:
	-	fixed warnings during compilation

-------------------------------------------------------------------------------
< 2003-01-22: commit >

folder build_ppc/release
	-	added project-files for PowerPC-version

many files:
	-	patched to compile & run under PowerPC

-------------------------------------------------------------------------------
< 2003-01-19: commit >

Beam_in_Parts*.proj:
	-	added BmNetJobModel.*

BmBodyPartList:
	-	changed first parameter of BmMemFilter-calls to be a pointer 
		instead of a reference

BmEncoding:
	-	removed BmDotstuff-(de/en)coder-classes, they now live in
		BmNetJobModel

BmJobStatusWin:
	-	QuitRequested() now takes a little snooze() in order to give 
		running jobs a chance to stop

BmLogHandler:
	-	corrected wrong number of spaces in linebreak-reformatting

BmMailView:
	-	corrected automatic cursor-positioning when the selected signature
		has changed

BmMemIO:
	-	BmStringIBuf now supports multiple buffers, i.e. you can add
		any number of input buffers to a BmStringIBuf which will pass
		them on to its output as if it was only one single buffer

BmNetJobModel:
	-	added this, which contains the following classes:
		+	BmNetJobModel, an abstraction of job-models that run over
			a network (i.e. send/receive data)
		+	BmNetIBuf, a BmMemIBuf-subclass that reads from a socket
		+	BmNetOBuf, a BmMemOBuf-subclass that writes to a socket
		+	BmDotStuffEncoder & BmDotStuffDecoder, that implement
			the dot-stuffing algorithm used by several mail-protocols
		+	BmStatusFilter, an abstract class for fetching data from
			a server and separate the answer into a status-part and an
			optional part containing additional data

BmPopAccount:
	-	made GetPOPAddress() deal properly with NULL-pointers

BmPopper:
	-	reworked network-code to make use of BmNetJobModel base-class
		(and other classes from BmNetJobModel)
	-	added BmPopStatusFilter, a BmMemFilter that knows how to separate
		POP3-status messages from additional answer-data and is able to
		interprete the status-messages

BmSmtpAccount:
	-	made GetSMTPAddress() deal properly with NULL-pointers

BmSmtp:
	-	reworked network-code to make use of BmNetJobModel base-class
		(and other classes from BmNetJobModel)
	-	added BmSmtpStatusFilter, a BmMemFilter that knows how to separate
		SMTP-status messages from additional answer-data and is able to
		interprete the status-messages

BmWindow, BmMainWindow, BmMailEditWin, BmMailViewWin:
	-	fixed problem with CUT/COPY/UNDO-messages being sent in an
		infinite loop if the focus-view does not understand them
	-	moved handling of CUT/COPY/UNDO-messages into BmWindow

-------------------------------------------------------------------------------
< 2003-01-14: commit >

BmBodyPartList:
	-	fixed encoding/conversion being the wrong way round in
		ConstructBodyForSending(). We have to convert first, then
		encode...

BmEncoding:
	-	NeedsEncoding now explicitly takes an utf8-string (it
		actually doesn't matter, but I wanted to clear things up).

BmMail, BmMailEditWin:
	-	ConstructBodyForSending now gets the editedText as UTF8-
		string as opposed to a string in the mail's native charset

BmPeople:
	-	fixed bug where persons with empty emails would be added to
		their respective groups, resulting in a crash when actually
		trying to display this group's list of mail-addresses

-------------------------------------------------------------------------------
< 2003-01-12: commit >

BmStorageUtil:
	-	fixed bug in BmReadStringAttr that would read the terminating
		'\0' into the string, too.

-------------------------------------------------------------------------------
< 2003-01-10: commit >

*.proj:
	-	added missing BmString-support to bone-/release-projects

BmEncoding:
	-	implemented a redesigned decoding/encoding scheme
		based on BmMemFilter derivatives, quoted-printable and
		base64 are done.

< 2003-01-01: commit >

BmBodyPartList, BmMail, BmMeilHeader, BmMailView:
	-	reimplemented buffer handling to use BmMemFilters and/or
		BmMemIO-classes, resulting in much less memory being used 
		when handling large mails

BmEncoding:
	-	finished the redesigned decoding/encoding scheme
		based on BmMemFilter derivatives
	-	re-implemented the conversion and en/de-coding functions
		to use BmMemfilters
	-	optimzed quoted-printable and esp. base64-code

BmMailHeaderView:
	-	added timezone to string when displaying times converted to
		localtime

BmMailRef:
	-	added missing support for swatch-time when reading attributes
		directly from file (as opposed to reading from archive).

BmMemIO:
	-	finsished implementation of memory-/string-IO classes

BmPopper:
	-	enlarged network buffer-sizes to 64KB
	-	switch from class-constant to Prefs-field "NetReceiveBufferSize"

BmPrefs:
	-	added field "NetReceiveBufferSize"

BmSmtp:
	-	enlarged network buffer-sizes to 64KB
	-	reimplemented buffer handling to use BmMemFilters, resulting
		in a much less memory being used when handling large mails

BmString:
	-	changed RemoveAll()-functions to use _ReplaceAll()

BmUtil:
	-	fixed local/utc-confusion in TimeToSwatchString()

base64:
	-	removed, functionality has been moved to BmEncoding

-------------------------------------------------------------------------------
< 2002-12-28: commit >

BmApp, BmBasics, BmBusyView, BmController, BmDataModel, BmEncoding,
BmGutUtil, BmJobStatusWin, BmListController, BmLogHandler, BmMailFolder,
BmMailFolderView, BmMailMover, BmMailRef, BmMailRefList, BmMailView,
BmMailViewWin, BmMainWindow, BmNetUtil, BmPeople, BmPopAccount,
BmPopper, BmPrefs*View, BmPrefsWin, BmRefManager, BmResources,
BmRulerView, BmSignature, BmSmtpAccount, BmToolbarButton, BmWindow,
BmDeskbarView, regexx, split, WrappingTextView:
	-	switched from BString to BmString

BmBodyPartList:
	-	switched from BString to BmString
	-	we now decode/convert bodyparts only at the point when this
		data is actually needed (lazy evaluation), resulting in a
		better performance for the usual case where only an overview
		of the bodypart is being displayed, but no data accessed.
		N.B.: For best performance, we'd have to resort to displaying 
		the length of each bodypart in its encoded form (set the Prefs-
		value "ShowDecodedLength" to false for that), but 
		since this might confuse our users, we better stick with 
		showing the correct, decoded values.
	-	fixed bug in multipart-parsing that caused any multipart
		to actually handle the text contained within its boundaries
		itself, in effect resulting in this text being added to a mail
		twice during save, first by the multipart (incorrect) and the 
		through its children (correct).

BmBodyPartView:
	-	switched from BString to BmString
	-	added support for prefs value "ShowDecodedSizeOfAttachments"

BmMail:
	-	switched from BString to BmString
	-	reactivated Mail-proxy, so that a mail exists only once in
		Beam, no matter how often it is being used.

BmMailEditWin:
	-	switched from BString to BmString
	-	fixed bug that caused Beam to ignore any changes within textviews
		except the subject-field.

BmMailFolderList:
	-	switched from BString to BmString
	-	improved performance of new-mail-detection on startup by
		freezing the list during the query, then thawing it and update
		the appropriate mail-folders manually, afterwards.

BmMailHeader:
	-	fixed bug in BmAddressList::SplitIntoAddresses() which caused
		addr-lists that contained two phraseless route-addresses 
		enclosed by <> to be garbled. The following address is an
		example: 
			<test1@xxx.de>, <test2@yyy.com>
		came out as:
			test1@xxx.de>, <test2@yyy.com
	-	switched from BString to BmString

BmMailHeaderView:
	-	switched from BString to BmString
	-	added support for pref-value "TimeModeInHeaderView", which can
		be used to select between three time-modes:
		   + native (showing the date as formatted within the mail)
		   + local (showing date converted to localtime)
		   + swatch (showing date converted to swatch-internet-time)

BmMailRefView:
	-	switched from BString to BmString
	-	added support for showing timestamps as swatch-internet-time

BmPrefs:
	-	switched from BString to BmString
	-	added fields: 
		+ "TimeModeInHeaderView"
		+ "UseSwatchTimeInRefView"

BmSmtp:
	-	switched from BString to BmString
	-	optimized handling of sending large mails to several Bcc-
		recipients. The mailtext is now prepared once (in advance)
		instead of being prepared for each and every recipient.

BmStorageUtil:
	-	switched from BString to BmString
	-	added BmReadStringAttr()

BmString:
	-	added to project, codebase is from OpenBeOS and has been 
		renamed and modified for Beam's needs.

BmUtil:
	-	switched from BString to BmString
	-	as a result of the switch to BmString, several util-methods
		that used to reside in BmUtil have been integrated into BmString.

-------------------------------------------------------------------------------
< 2002-12-18: commit (new CVS-folder layout) >

all:
	-	reworked CVS-folder layout to be easier to understand and
		work with

BmApp:
	-	in RefsReceived() we traverse links now

BmBodyPartList:
	-	fixed bug with initializers relying on declaration order
		(which in fact was the other way around)
	-	reworked & simplified multipart-handling (and introduced 
		PruneUnneededMultiParts() for that purpose)

BmBodyPartView:
	-	we avoid complaining about mimetype-mismatches if the real
		mimetype is (or rather, BeOS believes it to be) text/plain

BmMail:
	-	reworked things so that ConstructBodyForSending() does not
		require reinitialization of mail. This way we avoid reparsing
		the mail's contents during a save

BmRulerView:
	-	fixed initializers relying on declaration order

BmStorageUtil:
	-	in DetermineMimeType() we traverse links now

-------------------------------------------------------------------------------
< 2002-12-16: commit >

BmBodyPartList:
	-	when creating a bodypart from a given file, we no longer
		doublecheck the files mimetype, since that exposes the
		problem of the BeOS text/x-email mimetype sniffer-rule not
		correctly identifying outgoing emails as such (it thinks
		they are text/plain).
		This fix complies with the following concept about data:
		trust local info, but do not trust remote info.

BmBodyPartView:
	-	changed mimetype-check of attachments in such a way that
		Beam now offers to open the attachment with the real or
		the declared mimetype, thus allowing for easier handling of
		cases where BeOS' idea of a files mimetype is wrong.

BmMail:
	-	always display correct originator in reply-intro, instead
		of (under some circumstances) showing the list address

BmMailEditWin:
	-	the window-title now reflects the mail's current subject

BmPeople:
	-	fixed problem of duplicate mails being shown
	-	added 'All People'-submenu

BmStorageUtil:
	-	minor cleanup

-------------------------------------------------------------------------------
< 2002-12-12: commit>

BmApp:
	-	fixed bug when replying to several mails: addresses 
		with different phrases but identical addr-specs are now
		handled as one single address

BmBodyPartList:
	-	redesigned and reactivated support for encoding-selection
		by user

BmBodyPartView:
	-	now logs into MailParser.log

BmLogHandler:
	-	now show correct micro-seconds when logging

BmMail:
	-	added DetermineReplyAddress(), a central place where
		the different reply-modes are handled
		
BmMailHeader:
	-	added BmAddressList::AddrSpecsAsString(), which extracts
		only the addr-specs from an addresslist

BmMailEditWin:
	-	changed people-selection-code to provide menus for
		different groups of people

BmMailView:
	-	now logs into MailParser.log
	-	redesigned and reactivated support for encoding-selection
		by user

BmPeople:
	-	completed implementation of people-selection

libregexx/split:
	-	added split() and splitex() functions that return the
		resulting vector through passed-in references (faster)
	-	fixed incorrect handling of last match in split()/splitex()

-------------------------------------------------------------------------------
< 2002-12-10: commit>

Beam_in_Parts_*bone.proj, Beam_in_Parts_release.proj:
	-	added missing BmPeople.*

-------------------------------------------------------------------------------
< 2002-12-10: commit>

BmListViewController:
	-	added support for automatic scrolling during drag'n'drop

BmMail:
	-	added support for very long words (urls) being wrapped when 
		they should not be

BmMailView:
	-	added support for very long words (urls) being wrapped when 
		they should not be

BmUtil:
	-	ConvertTabsToSpaces(): made tabwidth configurable
	-	WordWrap() now cares for words that exceed the maximum
		line length (like URLs) to not be wrapped

ColumnListView:
	-	small cleanups

WrappingTextView:
	-	added support for moving cursor wordwise when pressing
		ALT/CONTROL and cursor-keys

-------------------------------------------------------------------------------
< 2002-12-08: commit>

BmApp:
	-	mailto: now supports arbitrary parameters (not only subject)
	-	added support for reply_list and reply_originator

BmBodyPartList:
	-	fixed bug with newlines not being handled correctly during
		ContentField-parsing.
		
BmMail:
	-	added two new reply-types, list and originator
	-	made smart reply-type detection as the default reply-type,
		where Beam automatically tries to determine wether to reply
		to the list or to the person

BmMailEditWin:
	-	added variations to send-button
	-	fixed bug with bcc-field not being visible (but latch indicating
		that it should be)

BmMailFolderView:
	-	repaired non-working handling of latch by key-press

BmMailHeader:
	-	added DetermineListAddress()

BmMailRefView:
	-	added reply_list and reply_originator to menu

BmMailViewWin:
	-	added variations to reply- and forward-buttons

BmMainWindow:
	-	added variations to reply- and forward-buttons

BmPrefs:
	-	switched DefaultForwardType from int- to string-type

BmPrefsMailConstrView:
	-	switched DefaultForwardType from int- to string-type

BmToolbarButton:
	-	added support for action-variations (latch)

libsieve:
	-	upgraded to version 2.1.3

-------------------------------------------------------------------------------
< 2002-12-05: commit >

BmApp:
	-	added creation/deletion of BmPeopleList

BmMailEditWin:
	-	added support for selecting people in to/cc/bcc-fields, 
	-	original patch has been submitted by Rainer Riedl, thanks!

BmPeople:
	-	created, contains BmPeopleList

BmUtil:
	-	added GenerateSortkeyFor()	



*******************************************************************************
[Beam v0.914, 2002-11-29]:
*******************************************************************************
	BmApplication:
		-	mark mails as read before trashing them in order to avoid confusing
			the new-mail counter.
	
	BmDeskbarItem:
		-	shrunk menu-font to 10 points.
		-	removed LivesInTrash(), since that didn't make any sense.
	
	BmEncoding:
		-	added IsCompatibleWithText() in order to check attachments of type
			text if they really are text (not binary), before they are being
			added to a mail. This is needed in the special case where an attachment
			lives on a non-BeOS filesystem (thus not having reliable filetypes).
			For Instance, BeOS believes that MS-Word documents on a FAT32-partition
			are of type text/plain, while in fact they contain binary data.
			To avoid Beam chopping off the file, we do this sanity check first.
	
	BmGuiUtils:
		-	changed handling of shortcuts in CreateMenuItem() such that trailing
			dots are removed.
	
	BmLogHandler:
		-	replaced calls to BString::ReplaceAll with ReplaceSubstringWith().
	
	BmMail:
		-	fixed crash in quoting-code when long lines containing only spaces
			were encountered.
			
	BmMailEditWin:
		-	now we clobber a mail's date only if it is not a redirection, since
			in that case the original date *must not* be fiddled with.
		-	After constructing a mail's text afresh, we now update the mail's
			connections to it's controllers, since the datamodel's for the
			body and the header have been changed. This fixes the bug that
			caused Beam to ignore changes to the bodypartlist (attachments)
			when the mail has been saved once (from inside the maileditview).
			After the first save, the connection to the (old) bodypartlist 
			persisted so that any further changes to the attachments would be
			lost. This bug could lead to lost/unwanted attachments when a mail
			was finally sent.
		-	Corrected field-value check for the case of a redirected mail
			(we have to check the resent-... fields in that case).
			
	BmMailFolder:
		-	instead of using one locker per mail-folder, we now use a single
			static locker to protect the ref-lists of all mail-folders. There were 
			just too many lockers around.
	
	BmMailFolderList:
		-	the new-mail counter does not anymore check if new mail lives
			in trash, since that is unreliable anyway (moves inside/outside 
			trash are not seen). We just hope that there'll never be any
			new mail in trash...
	
	BmMailHeader:
		-	several cosmetic changes that faciliate correct handling of empty
			group-addresslists.
		-	the regexx that was used to split the mail-header into separate
			fields used too much stack space (leading to crashes), so we now use
			hand-coded field-separation.
	
	BmMailRef:
		-	when errors occur during construction, we now only log the errors
			instead of popping up alerts for them, in order to behave in a
			more sensible way if other mail-software is around (like MDR).
	
	BmMailView:
		-	added UpdateControllers() that reinstalls controller/datamodel 
			connections.
	
	BmPrefs:
		-	patched archive-version to 3
		-	changed handling of shortcuts such that trailing dots are removed.
			This avoids problems when adding/removing dots in the menu-items.
			
	BmSmtp:
		-	fix problem that made Beam try to send empty rcpt-commands to
			server for empty group-addresslists.
	
	BmStorageUtil:
		-	Fixed MoveToTrash so that it works with LocaleTracker, too.
			We now use find_directory() to get the desktop-path and then 
			target the tracker message to that window (usually 
			"/boot/home/Desktop"). This seems to work for both OpenTracker and
			LocaleTracker.
		-	Fixed MoveToTrash even more to work with all known Trackers
			(5.00, 5.02, OpenTracker and LocaleTracker). Now both 'Desktop' and
			'/boot/home/Desktop' are tried as base-windows.
		-	removed LivesInTrash(), since that didn't make any sense.
			
	BmUtil:
		-	added ReplaceSubstringWith() to avoid the use of the pathetic
			BString::ReplaceAll().
	
	general node-monitoring:
		-	we do not any longer show errors on screen, since there are just
			to many of them happening, esp. when MDR is running. MDR seems to 
			create and then immediately rename/move mails, which would confuse
			Beam ever to often. So now at least Beam is quiet about it...

	release-projects:
		-	replaced -fomit-frame-pointer with -fno-omit-frame-pointer, since
			this way the obscure crashes that some people have experienced
			during send/receive don't (seem to) occur. While at it, we removed
			the unneeded -no-pic, too.
	
[Beam v0.913, 2002-11-15]:
	all:
		-	added a +1 to many BString::LockBuffer() calls in order to have enough
			room for the trailing '\0'. The BeBook isn't too clear about this, so we 
			play safe.
			
	BmApp:
		-	replaced old, overly simple deskbar-item with new implementation
		-	in QuitRequested() we now find out if there is any window that does 
			not want to quit yet. Only if there's no veto, we go on and really quit
			all windows and the app.
	
	BmBodyPartList:
		-	added functionality to automatically determine the correct mimetype
			of any attachment during open/save, if that mimetype has no or an
			incorrect mimetype set.
		-	now Beam no longer complains about empty multipart bodies, where the
			boundary appears only once (with appended '--')
	
	BmBodyPartView:
		-	now verifies advertised mimetype before opening an attachment
	
	BmDataModel:
		-	added HandleError(), which knows when to log and/or show errors
	
	BmDeskbarView:
		-	added implementation of a real deskbar-view that does not seem to crash
			the original R5-deskbar anymore
	
	BmEncoding:
		-	fixed bug introduced in 0.913rc2 that would incorrectly handle softbreaks
			that were followed by only a single character. This resulted in newlines being 
			removed were they shouldn't and the mail-layout being somewhat garbled.
			N.B.: This bug affected only the displaying of mails, not the actual mail
			generation.
		-	fixed bug with quoted-printable encoding that would let an underscore-char
			pass through unencoded (which would lead to erraneous results in the 
			decoding stage, in turn messing up iso-2022-jp encodings, which in turn
			would cut off messages!).
	
	BmJobStatusWin:
		-	changed filter-hack to start immediately after all popper-jobs have finished,
			not after they have been removed from the status-win.
	
	BmListController:
		-	enhanced "spring-loaded"-opening of folders in such a way that the 
			timer-triggered expand/collapse would not occur when the user has
			expanded/collapsed the current item manually (by moving the mouse 
			over the expander).
	
	BmLogHandler:
		-	now we are logging proper timestamps (with msecs)
		-	BM_LOGERR now always logs into current logfile, too
		
	BmMail:
		-	a race-condition that occurs when multiple mails are being deleted through
			the trash would sometimes lead to the strange effect that the mail-ref would
			select and try to display a message that has just been deleted. In this case
			an error message was shown that complained about the deleted message
			not being there >:o/ Now we simply do not display such a message but
			ignore a missing message quietly.
		-	when creating a reply, the algorithm by which we determine the receiving
			address (the new from) has been improved to handle gracefully the case
			where the account that has received the mail could not be found anymore
			(for instance because it has been renamed).
		-	corrected handling of multiple originators when generating reply-/forward-intro.
		-	set default from-account when redirecting mails
	
	BmMailFolder:
		-	fixed bug in AddMailRef() & RemoveMailRef() where the methods would
			return without handling the needed new-mail status-changes.
	
	BmMailView:
		-	added missing conversion to local linebreaks for mimeparts that
			make use of the 'binary' content-transfer-encoding.
		-	added support for copying URLs to clipboard
	
	BmPopper:
		-	from now on, errors are shown only when ShouldContinue() yields true
	
	BmPrefs...View:
		-	changed minimum sizes to cooperate with 800*600 screens
		
	BmResources:
		-	added sanity-check to FetchOwnFQDN() that removes any newlines 
			from hostname/domain.
			
	BmSmtp:
		-	from now on, errors are shown only when ShouldContinue() yields true
	
	BmUtil:
		-	fixed buffer-overflow in ConvertTabsToSpaces() that caused many crashes.
		-	now WordWrap() works correctly even if the to-be-wrapped text doesn't
			end with a newline
		-	removed call to LockBuffer( 0) that doesn't work under Dano
	
	ColumnListView:
		-	added a workaround for the problem with the BListView not correctly
			scrolling down with the selection when the user uses Shift-CursorDown
			to extend the selection beyond the visible items.
		-	pressing escape now deselects all items. This way it is possible to get
			out of the all-items-are-selected trap (cursor would not move anymore).
	
	PCRE:
		-	updated to pcre v3.9


[Beam v0.913rc2, 2002-06-14]:
	BmBodyPartList:
		-	fixed crashing bug when saving non-text attachments
		-	now transfer-encodings like '8bits' are handled correctly (as '8bit')
	
	BmEncoding
		-	qp-lines ending with an *encoded* '=' were incorrectly joined with
			the following line (only plain [non-encoded] '=' indicate a soft-wrap).
		
	BmJobStatusWin:
		-	a PopperView now only beeps once when new mail has arrived
		-	when a complete Popper-run is done, Beam looks for an executable
			named 'filter' in the app's home folder, which is then executed. 
			This way, external mail filtering can be done.
	
	BmListViewController:
		-	added support for delayed auto-expand/-collapse during drag
		-	fixed leaking of all items in destructor...this additionally closes
			the reference leaks that showed when closing prefs-window
	
	BmMailEditWin:
		-	fixed bug that caused unmodified mails to not be hard-wrapped
			before send
		-	if there's only one smtp-account, it is selected automatically
	
	BmMailFolderView
		-	pressing the right control-key while moving the mouse-wheel or using the 
			cursor-keys will scroll the mail-view (only left key was working before)
	
	BmMailRefView:
		-	fixed ref-leak when handling a drop
		-	pressing the right control-key while moving the mouse-wheel or using the 
			cursor-keys will scroll the mail-view (only left key was working before)
		
	BmMailView:
		-	when pasting text, now the font of the mailview is forced upon the
			pasted text
		-	signatures with special characters are now displayed correctly 
			(superfluous conversion to UTF8 removed).
		-	when the user has selected a new signature, the cursor is now positioned
			immediately *before* the new sig-text (not at the end of the sig, as before).
		-	pressing the right control-key while moving the mouse-wheel or using the 
			cursor-keys will scroll the mailref-view (only left key was working before)
	
	BmMainWindow:
		-	removed ref-leak in BmMainMenuBar, which occurred whenever any 
			pop-account was added/removed/changed.
		-	fixed problem with BmMainMenuBar not showing any Pop-Accounts at all.
			
	WrappingTextView:
		-	fixed bug when undoing a deletion (now the deleted text is saved
			*before* it is being deleted from textview, err...)

[Beam v0.913rc1, 2002-05-09]:

	base64:
		-	added (code comes straight from MDR). This code replaces the one
			supplied by BeOS that crashes upon encountering incorrect data.

	Beam_release.proj:
		-	added -no-fpic -fomit-frame-pointer parameters for better code
	
	Beam...bone.proj
		-	added separate project-files for bone-/dano-version.
	
	BmApp:
		-	joined replies/forwards now correctly generate subjects through 
			BmMail::CreateXXXSubjectFor()-methods.
			Additionally, now the first subject gets copied into the joined mail
			plus a ' (and more...)', indicating that there's more than one subject.
		-	added support for subjects and URL-encodings in mailto: URLs
		-	when marking mails as read that are not new (replied, forwarded, etc.)
			Beam now asks the user whether to just mark new mails or really
			mark all.
		-	fixed reference-leak when printing mails
		-	fixed crash in RefsReceived when a non-mail reference has been received
		
	BmBodyPartList:
		-	Erraneous MIME-headers with missing semicolon between field-value and 
			attributes no longer cause an exception (they are now silently accepted).
	
	BmBodyPartView:
		-	fixed bug with icons being cut off down the tree hierarchy
	
	BmDataModel:
		-	BmListModel now sets and updates a mNeedsStore-flag as needed (this
			flag indicates that the list has changed and should be stored)
		
	BmEncoding:
		-	replaced BeOS-native base64-routines by the ones from MDR (which do not
			seem to crash).
	
	BmJobStatusWin:
		-	removed Window()->UpdateIfNeeded()-call in BmPopperView::AskUserForPwd(),
			since that's potentially unsafe and is not needed anyway.
		-	improved look'n'feel of password-acquisitors
		-	added support for beep-event when new mail arrived.
		-	fixed problem with auto-checks removing job-window when they
			should not.
	
	BmMail:
		-	fixed bug in AddPartsFromMail which always added forward-intro, even
			if current mail was a reply.
		-	filename-creation now respects B_FILE_NAME_LENGTH
		-	when creating reply-/forward-intro, %s now expands to subject and
			\n to newline.
		-	quoting now handles non-trivial encodings better (like iso-2022-jp), now
			the character-count is used instead of the byte-count.
		-	saving a message does not re-read it from disk anymore, since this does
			not make sense anymore (not that it used to make much sense before...)
		
	BmMailEditWin:
		-	hardwrapping is only executed directly before a mail is sent (not when
			it is saved as draft).
		-	now the mail-date is bumped whenever the mail is saved (per default)
		
	BmMailFolderView:
		-	now allows scrolling of refview by SHIFT-modifier and scrolling of mailview
			by CONTROL-modifier
	
	BmMailRefList:
		-	now the mailref-cache is only stored when neccessary
		-	changed structure of mail-cache for better performance when reading/
			writing the cache.
	
	BmMailView:
		-	mouse-cursor changes if hovering over URL
		-	fixed BTextView-issue when typing spaces at end of line, now only
			one space is accepted.
		-	the TextRect is now recalculated when the font changes
		-	added multi-level undo (limited only by available memory)
			
	BmPopAccount:
		-	when re-reading POP-account-settings within prefs, the state of downloaded
			messages must be kept as is (not re-read), since otherwise Beam may
			download messages again that already were downloaded before.
		
	BmPrefs:
		-	now all public calls are secured by a locker, since when resetting prefs to
			saved state, we might be causing crashes without the lock.
	
	BmPrefsGeneralView:
		-	checkbox added for new-mail beep-event (on/off)
	
	BmPrefsMailReadView:
		-	fixed non-working AutoCheckOnlyIfPPPRunning-checkbox
		-	fixed non-working MarkAsReadDelay-control.
		
	BmPrefsRecvMailView:
		-	added sanity-check
	
	BmPrefsSendMailView:
		-	fixed state-handling (enabling/disabling) properly
		-	added sanity-check
	
	BmSignature:
		-	dynamic signatures are now interpreted as a shell-script, not as one
			single command
	
	WrappingTextView:
		-	when removing characters (e.g. by pressing Delete), a modification-msg
			now indicates the state change

v0.912, 2002-04-14
	-	better support for forwarding & replying to multiple messages at once,
		now you can choose whether or not to join the messages.
	-	added support for printing one or more messages.
	-	corrected some MIME-problems, increasing robustness and eliminating 
		the compatibility-problems Beam had with other mail-programs 
		(like Mail-It or Eudora). These programs now accept Beam-generated 
		MIME-messages, including quoted-printables and attachments.
	-	doubleclicking a folder now opens the corresponding Tracker-window.
	-	deactivating the Desktop-icon does work now.
	-	added configurable delay before a shown mail is being marked as read.
	-	added option for using 8-bit-mime when constructing mails.
	-	added an option to switch between soft/hard-wrapping of the mailtext 
		(Beam always used soft-wrapping before).
	-	when requested, Beam can now contact a POP3/SMTP-server and suggest 
		the best (most "secure") authentication type.
	-	and other (minor) bugfixes, usability and GUI-enhancements.

v0.911, 2002-03-24
	-	fixed stupid bug that caused Beam to crash if no FolderView-state
		exists (like after first install)
	-	forwarding attachments works correctly now

v0.91, 2002-03-24
	-	header-view contents are now selectable and draggable.
	-	added support for redirecting mails.
	-	Beam now works under Dano (BeOS 5.1).
	-	signature support added (for static and dynamic signatures).
	-	added automatic mail-checking (every xx minutes).
	-	all shortcuts are now configurable via prefs.
	-	added better quoting-modes (simple, push-margin and auto-wrap)
		in order to reduce comb-like effect.
	-	added option to show in- & out-folders always at top.
	-	added tooltips to all preferences-controls, which is one step
		on the way to better usability (but Online-Help still missing).
	-	added Deskbar icon indicating the presence of new mail.
		(This seems to constantly crash the R5 Deskbar, but it works
		for OpenTracker & Dano versions...)
	-	Display-font can now be selected when viewing/editing mails.
	-	Beam can now set itself up as preferred email application.
	-	fixed problems with node-monitoring stopping to work after a
		recreate-cache.
	-	Beam now correctly shows BeOS standard-icons for mails, if 
		Beam is preferred app.
	-	fixed incorrect mail-address creation in case of phrases containing
		commas (like: Meyer, Justin <xx@yyy.zz>). This would now be created
		as "Meyer, Justin" <xx@yyy.zz>.
	-	fixed problems with highlighting URLs that contain a tilde ('~').
	-	many more bugfixes

v0.903, 2002-02-22
	-	Beam no longer complains about unknown prefs-field 'BeMailStyle'.

v0.902, 2002-02-22
	-	removed crashing bug when wildly moving through mailfolder-view.
	-	disabled selecting and invoking for	the dummy-mailrefview used in prefs.
	-	make the reply-mode with selected text work (only selected text will be
		included in reply).

v0.901, 2002-02-21
	-	enable people to send mail if there is no working name-service
		(Beam used to complain that it could not determine own hostname).
		In this case, Beam now uses host/domain info from network settings-file.
													[thx to the many people who reported this]
	-	preferences window is now moved to front when a user tries to open it twice
		(instead of crashing, as before).
	-	recreating a mailfolder-cache now works.
	-	new prefs-flag that selects BeMail-compatible shortcuts.
	-	when a new node has been detected and seems to have zero size, we assume
		that an application is creating the mail-file directly inside the in-folder.
		In this case, we snooze for a short amount of time and then proceed to
		read the file, which hopefully is now completely written.
		This is no complete solution, but I hope that this will increase 
		compatibility with MailDaemonReplacement and other programs.
	-	fixed a couple of smaller redraw/layout issues

v0.90, 2002-02-19
	- first public release
	
